<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>par_moving_platform</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.
event_user(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if move_sys = 1
{
event_inherited()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement &amp; Player position.

 // Activate:
    if(active == false)
    {
       if(inside_view())
       {
          active = true;
       }
    }
    
 // Only run if active.
    if(active == false) exit;
    
 // Set previous position.
    previous_x = x;
    previous_y = y;
    
 // Set Horizontal/Vertical speed.
    if(x_spd &lt; xd_speed)
    {
       xd_speed -= 0.025;
    }
    else if(x_spd &gt; xd_speed)
    {
            xd_speed += 0.025;
    }
    if(y_spd &lt; yd_speed)
    {
       yd_speed -= 0.025;
    }
    else if(y_spd &gt; yd_speed)
    {
            yd_speed += 0.025;
    }
    
    if moveplayer = false or (moveplayer = true &amp;&amp; global.main_player.platform_id = id)
    {
        x_speed += xd_speed;
        y_speed += yd_speed;
        
        x = floor(relative_x+x_speed);
        y = floor(relative_y+y_speed); 
    }
    
 // Update player position.
 if move_sys = 0
 {
    _main_char = global.main_player.id;
    _cpu_char  = obj_ai_player;
    temp_mask = mask_index;
    
    if(instance_exists(_main_char))
    {
       mask_index = _main_char.mask_index;
       
       if(_main_char.ground &amp;&amp; _main_char.platform_id == id &amp;&amp; _main_char.state != STATE_DEATH &amp;&amp; !instance_place(_main_char.x + x - previous_x, ((y-sprite_yoffset)-platform_offset), par_solid))
       {
          //aud_play_simple(snd_swap);
          _main_char.x += (x-previous_x);
          _main_char.y  = ((y-sprite_yoffset)-platform_offset);
          
          if _main_char.y_speed &gt; 0
          {
            _main_char.y_speed = 0;
          }
       }
    }
    if(instance_exists(_cpu_char))
    {
       if(_cpu_char.ground == true &amp;&amp; _cpu_char.platform_id == id)
       {
          _cpu_char.x += (x-previous_x);
          _cpu_char.y  = ((y-sprite_yoffset)-platform_offset);
          
          if _cpu_char.y_speed &gt; 0
          {
            _cpu_char.y_speed = 0;
          }
       }
    }

    mask_index = temp_mask;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>  // X/Y Speed:
    x_spd = 0;
    y_spd = 0;
    image_speed = 0.2;
    
 // Character Y offset. Default set at 10, you might need to tweak this for other platforms.
    platform_offset = 10; 
    
    relative_x = x; // Relative x position.
    relative_y = y; // Relative y position.
    previous_x = x; // Previous x position.
    previous_y = y; // Previous y position.
    
    x_speed    = 0; // Horizontal speed.
    y_speed    = 0; // Vertical speed.
    xd_speed   = 0; // Increases/Decreases horizontal speed while changing directions.
    yd_speed   = 0; // Increases/Decreases vertial speed while changing directions.
    active     = 0; // Is the platform active?
    moveplayer = false;
    move_sys = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
