<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_rain</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rain drop

//Animate
image_speed = 0;
image_index = choose(0,1,2,3);

//Alpha
image_alpha = random_range(0.5, 1);

//Speed
spd = round(random_range(3, 6));

//Set the motion
hspeed = -spd;
vspeed = spd;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rain logic

//Check for a semisolid
var semisolid = collision_rectangle(bbox_left-hspeed, bbox_bottom, bbox_left, bbox_bottom+vspeed, par_solid, 0, 0);

//Check for a slope
var slope = collision_rectangle(bbox_left-hspeed, bbox_bottom, bbox_left, bbox_bottom+vspeed, par_platform, 1, 0);

//Check for a water object
var water = 0; //collision_rectangle(bbox_left-hspeed, bbox_bottom, bbox_left, bbox_bottom+vspeed, obj_swim, 0, 0);

//Destroy when colliding with any collision object
if (vspeed &gt; 0) {

    //If there's a semisolid
    if (semisolid)
    || (slope)
    {
    
        //If the collision is a semisolid
        if (semisolid) {
        
            y = semisolid.bbox_top-5;
        }
    
        //Halt
        hspeed = 0;
        vspeed = 0;
    
        //Create a drop object
        with (instance_create(x, y+5, obj_smoke)) {
        
            sprite_index = spr_rain_sp;
            image_speed = 0.3;
        }
        
        //Destroy
        instance_destroy();
    }
}

//Destroy when outside the view
if (y &gt; view_yview[view_current]+288)  
    instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
