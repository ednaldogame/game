<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_torch_post_activated</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>trigger=true
option=1; //1 - yes  2 -  no
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if trigger==true{

x=global.warp_box_x[obj_torch_selector.warp_box];
y=global.warp_box_y[obj_torch_selector.warp_box];
image_index = (instance_nearest(global.warp_box_x[obj_torch_selector.warp_box], global.warp_box_y[obj_torch_selector.warp_box], obj_torch_post_activated)).image_index;

with global.main_player
{
    player_inputs_null();
    control_lock = true;
}

if keyboard_check_pressed(global.key_action) &amp;&amp; (obj_torch_selector.warp_box != obj_torch_selector.first_box)
{    
    with obj_player
    {
        x=global.warp_box_x[obj_torch_selector.warp_box];
        y=global.warp_box_y[obj_torch_selector.warp_box];
        control_lock = false;
    }
    
    with obj_torch_selector
    {
        instance_destroy()
    }
    
    trigger=false;
    option=1; 
    instance_create(x,y,obj_fade_in_white_fast);
    aud_play_simple(snd_teleport)
}
else if keyboard_check_pressed(global.key_special) or (keyboard_check_pressed(global.key_action) &amp;&amp; (obj_torch_selector.warp_box = obj_torch_selector.first_box))
{
    with obj_player
    {
        x=global.main_player.x;
        y=global.main_player.y;
        control_lock = false;
    }
    
    with obj_torch_selector
    {
        instance_destroy()
    }
    
    trigger=false;
    option=1; 
    aud_play_simple(snd_swap_fail);
}

}


if trigger==false
{
    scr_create_smoke(global.main_player.x, global.main_player.y, sprSmoke8)
    obj_camera.cam_obj = global.main_player;
    keyboard_clear(all);
    with obj_player
    {
    player_inputs_null()
    }
    instance_destroy()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if trigger==true
{
//Draw Dark Overlay:
draw_sprite_ext(spr_torch_overlay,-1,view_xview[0]+0,view_yview[0]+0,1,1,0,c_black,0.8)

draw_set_font(fnt_century_17)
{
    draw_set_halign(fa_center);
    draw_set_color(c_white)
    draw_text_shadowed(view_xview[view_current]+512/2, view_yview[0]+64,text("- SELECT A MAGIC TORCH -", "- SELECIONE UMA TOCHA MAGICA -"))
    
    var xx;
    if option==1
    {
    xx=512/2-32
    }
    if option==2
    {
        xx=512/2+32
    }
       
    if obj_torch_selector.warp_box&lt;global.warp_boxes
    {
        draw_set_color(c_white)
    }
    else
    {
         draw_set_color(c_black)
    }
    draw_text(view_xview[view_current]+512/2+32, view_yview[0]+128,"=&gt;")
    
    
    
    if obj_torch_selector.warp_box&gt;1
    {
        draw_set_color(c_white)
    }
    else
    {
        draw_set_color(c_black)
    }
    
    
    draw_text(view_xview[view_current]+512/2-32, view_yview[0]+128,"&lt;=")

}

if global.warp_boxes &gt; 1
{
    draw_text_shadowed_colored(view_xview[view_current]+512/2, view_yview[0]+230-16,text("PRESS *A* TO SELECT", "APERTE *A* PARA SELECIONAR"), c_lime)
    draw_text_shadowed_colored(view_xview[view_current]+512/2, view_yview[0]+230,text("PRESS *S* TO RETURN", "APERTE *S* PARA RETORNAR"), c_red)
}
else
{
    draw_text_shadowed(view_xview[view_current]+512/2, view_yview[0]+230-16,text("YOU NEED TO ACTIVE OTHER#TORCHES IN OTHER TO BE ABLE TO WARP", "VOCÃŠ PRECISA ATIVAR OUTRAS#TOCHAS PARA PODER SE TELETRANSPORTAR"))
}
draw_set_color(c_white)
}

//draw_self()
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
