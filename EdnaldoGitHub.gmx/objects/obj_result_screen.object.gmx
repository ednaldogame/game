<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9999998</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Result Start
    audio_stop_sound(global.bgm)
    global.bgm = bgm_result;
    aud_play_sound(global.bgm, global.bgm_volume, 1, 0, 1)
    global.game_paused = true;

// Circles
    circle_0_scale = 0;
    circle_1_scale = 0;
    circle_2_scale = 0;
    
    TweenFire(id, EaseInOutQuad, 0, false, 30, 80, "circle_0_scale", 0, 800);
    TweenFire(id, EaseInOutQuad, 0, false, 60, 80, "circle_1_scale", 0, 800);
    TweenFire(id, EaseInOutQuad, 0, false, 100, 60, "circle_2_scale", 0, 800);

// Result GFX
    spaceship_alpha = 0;
    character_sil_alpha = 0;
    character_sil_xscale = 0;
    character_sil_yscale = 0;
    character_alpha = 0;
    
    TweenFire(id, EaseInOutQuad, 0, false, 160, 60, "spaceship_alpha", 0, 1);
    TweenFire(id, EaseInOutQuad, 0, false, 180, 60, "character_sil_alpha", 0, 1);
    TweenFire(id, EaseInOutQuad, 0, false, 190, 60, "character_sil_xscale", 0, 1);
    TweenFire(id, EaseInOutQuad, 0, false, 220, 30, "character_sil_yscale", 0, 1);
    TweenFire(id, EaseInOutQuad, 0, false, 250, 30, "character_alpha", 0, 1);
    TweenFire(id, EaseInOutQuad, 0, false, 250, 30, "character_sil_alpha", 1, 0);

//Results
    plate_off = 512 * 2;
    lbar_off = -512 * 2;
    bbar_off = -512 * 2;
    rbar_off = 512 * 2;
    TweenFireTo(id, EaseInOutQuad, 0, false, 260, 60, "plate_off", 259);
    TweenFireTo(id, EaseInOutQuad, 0, false, 280, 30, "lbar_off", 0);
    TweenFireTo(id, EaseInOutQuad, 0, false, 300, 30, "rbar_off", 232);
    TweenFireTo(id, EaseInOutQuad, 0, false, 320, 30, "bbar_off", 0);

// Text
    snd_timer = 0;
    finished = 0;
    text_x = 1000;
    global.lilnotes_bank += global.lilnotes;
    val_lilnotes = 0;
    val_lilnotes_dif = 0;
    val_score = 0;
    
    TweenFireTo(id, EaseInOutQuad, 0, false, 320, 60, "text_x", 500);

// Bonus Time
    seconds = floor(global.game_time/1000);
    
    if(seconds &lt;= 29)
    {
       bonus_time   = 50000;
    }
    else if(seconds &gt; 29 &amp;&amp; seconds &lt;= 44)
    {
            bonus_time   = 10000;
    }
    else if(seconds &gt;= 45 &amp;&amp; seconds &lt;= 59)
    {
            bonus_time   = 5000;
    }
    else if(seconds &gt;= 60 &amp;&amp; seconds &lt;= 89)
    {
            bonus_time   = 4000;
    }
    else if(seconds &gt;= 90 &amp;&amp; seconds &lt;= 119)
    {
            bonus_time   = 3000;
    }
    else if(seconds &gt;= 120 &amp;&amp; seconds &lt;= 179)
    {
            bonus_time   = 2000;
    }
    else if(seconds &gt;= 180 &amp;&amp; seconds &lt;= 239)
    {
            bonus_time   = 1000;
    }
    else if(seconds &gt;= 240 &amp;&amp; seconds &lt;= 299)
    {
            bonus_time   = 500;
    }
    else if(seconds &gt;= 300)
    {
            bonus_time   = 0;
    }
    
    // Time Bonuses Don't Really Matter Here. We reduce their value by 2
    if bonus_time != 0
    {
        bonus_time = round(bonus_time/5);
    }
    
    score += bonus_time;
    val_time_bonus = 0;
    val_time = 0;

// Ranks
    global.rank[room] = 2;
    rank_x = 800; 
    
    if instance_number(par_golden_note) = 0
    {
        if seconds &lt; 120 &amp;&amp; global.hit_times = 0
        {
            global.rank[room] = 0; 
        }
        else
        {
            global.rank[room] = 1;
        }
    }
    
    
// Save Data, Add Number to Stages Unlocked.
    ini_open("save0" + string(global.current_save) + ".ini");
    ini_write_real("Ranks","RANK_" + string(room), global.rank[room]); 
    var cleared;
    cleared = ini_read_real("StagesCleared","CLEARED_" + string(room), false);
    
    if cleared = false
    {
        global.stages_unlocked ++;
        ini_write_real("StagesCleared","CLEARED_" + string(room), true);  
    }
    
    ini_close();     
    
// Save
    scr_save_game()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>aud_play_music(bgm_postresult, global.bgm_volume, 1)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Player gets stuck!
with obj_player
{
    x_speed = 0;
    y_speed = 0;
    player_inputs_null();
    control_lock = true;
    visible = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Count
    if text_x = 500 &amp;&amp; !finished
    {
        // Count Lil Notes
        val_lilnotes = scr_approach(val_lilnotes, global.lilnotes_bank, 1)
        val_lilnotes_dif = scr_approach(val_lilnotes_dif, global.lilnotes, 1)
        
        // Count Time
        val_time = scr_approach(val_time, global.game_time, 1000)
        
        // Count Score
        val_score = scr_approach(val_score, score - global.init_score, 10)
        
        // Sound
        if snd_timer &gt; -1
        {
            snd_timer --;
        }
        else
        {
            if val_lilnotes != global.lilnotes_bank or val_score != score
            {
                aud_play_simple(snd_score_add);
                snd_timer = 2;
            }
        }
        
        // Finish
        if ((val_score = score - global.init_score) &amp;&amp; (val_lilnotes = global.lilnotes_bank)) or keyboard_check_pressed(global.key_action)
        {
            // Make Sure Everything Is Equal
            val_score = score - global.init_score;
            val_lilnotes = global.lilnotes_bank;
            val_time = global.game_time;
            val_lilnotes_dif = global.lilnotes;
            
            // Do Things
            aud_play_simple(snd_score_total);
            TweenFireTo(id, EaseOutBounce, 0, false, 0, 30, "rank_x", 434);
            keyboard_clear(global.key_action);
            finished = true;
            alarm[0] = 60;
            exit;
        }
    }
    

    // Finished
    if finished
    {
        if keyboard_check_pressed(global.key_action) &amp;&amp; !instance_exists(obj_fade_to)
        {
            aud_play_simple(snd_menu_accept);
            with instance_create(0,0,objFadeToValue)
            {
                value = global.temp_room;
                global.exit_id = room;
            }
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Draw Results
// Circles
draw_set_color(c_purple);
draw_circle(x,y,circle_0_scale,0)

draw_set_color(c_white);
draw_circle(x,y,circle_1_scale,0)

draw_set_color(c_black);
draw_circle(x,y,circle_2_scale,0)

// GFX
draw_sprite_ext(spr_results_spaceship, 0, view_xview[0], view_yview[0], 1, 1, 0, c_white, spaceship_alpha)
draw_sprite_ext(spr_results_ednaldo, 0, view_xview[0] + 150, view_yview[0] + 170, 1, 1, 0, c_white, character_alpha)
draw_sprite_ext(spr_results_ednaldo, 1, view_xview[0] + 150, view_yview[0] + 170, character_sil_xscale, character_sil_yscale, 0, c_white, character_sil_alpha)

// Result
draw_sprite_ext(spr_results_bbar, 1, view_xview[0] + bbar_off, view_yview[0] + 32, 1, 1, 0, c_white, 1)
draw_sprite_ext(spr_results_plate, 1, view_xview[0] + plate_off, view_yview[0], 1, 1, 0, c_white, 1)
draw_sprite_ext(spr_results_lbar, 1, view_xview[0] + lbar_off, view_yview[0] + 20, 1, 1, 0, c_white, 1)
draw_sprite_ext(spr_results_rbar, 1, view_xview[0] + rbar_off, view_yview[0] + 265, 1, 1, 0, c_white, 1)

draw_set_font(fnt_century_20);
draw_set_halign(fa_left);
draw_text_shadowed(view_xview[0] + lbar_off + 4, view_yview[0] + 20 - 14,text("Results", "Resultados"))
draw_key(view_xview[0] + rbar_off + 6, view_yview[0] + 259, "A")

draw_set_font(fnt_century_17);
draw_text_shadowed(view_xview[0] + rbar_off + 32, view_yview[0] + 262, text("Continue", "Continuar"))

// Text
draw_set_halign(fa_right);
draw_text_shadowed(view_xview[0] + text_x, view_yview[0] + 10, text("Lil Notes:", "Notinhas:")
+ "#" + string(val_lilnotes) + "#(+" + string(val_lilnotes_dif) + "/" + string(global.lilnotes_total) + ")"
+ "##" + text("Time:", "Tempo:") + "#" + string(floor(val_time/60000))+":"+string_place_number(floor(val_time/1000) mod 60, 2, 0)
+ "##" + text("Score:", "Pontos:") + "#" + string(val_score) + "/" + string(score))

// Rank
draw_sprite_ext(spr_ranks, global.rank[room], view_xview[0] + rank_x, view_yview[0] + 192, 1, 1, 0, c_white, 1)



</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
