<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_main_menu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>current_image = irandom(sprite_get_number(spr_ednaldo_images));
previous_image = 0;

ednaldo_off = 512;
shadow_off = 512;
bar_alpha = 0;
sidebar_x = 600;

TweenFireTo(id, EaseInOutQuad, 0, false, 30, 80, "ednaldo_off", 0);
TweenFireTo(id, EaseInOutQuad, 0, false, 60, 80, "shadow_off", 0);
TweenFireTo(id, EaseInOutQuad, 0, false, 100, 60, "bar_alpha", 1);
TweenFireTo(id, EaseInOutQuad, 0, false, 130, 60, "sidebar_x", 423);

current_alpha = 1;
current_option = 0;
option_highlighted = 0;
option_min = 0;
option[0] = text("Play", "Jogar");
option[1] = text("Options", "Opções");
option[2] = text("Credits", "Créditos");
option[3] = text("Exit", "Sair");


// Option Off.
option_off_0 = -512;
option_off_1 = -512;
option_off_2 = -512;
option_off_3 = -512;

option_off[0] = option_off_0;
option_off[1] = option_off_1;
option_off[2] = option_off_2;
option_off[3] = option_off_3;

TweenFireTo(id, EaseOutQuad, 0, false, 25, 40, "option_off_0", 0);
TweenFireTo(id, EaseOutQuad, 0, false, 35, 40, "option_off_1", 0);
TweenFireTo(id, EaseOutQuad, 0, false, 45, 40, "option_off_2", 0);
TweenFireTo(id, EaseOutQuad, 0, false, 55, 40, "option_off_3", 0);


option_max = 3;

image_speed = 0;
alarm[0] = 120;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>previous_image = current_image;
current_image += 1;
current_alpha = 0;
alarm[0] = 180;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if current_alpha &lt; 1
{
current_alpha += 0.0125;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Handle Options
if keyboard_check_pressed(global.key_down)
{
    aud_play_simple(snd_menu_bleep);
    option_highlighted ++;
}

if keyboard_check_pressed(global.key_up)
{
    aud_play_simple(snd_menu_bleep);
    option_highlighted --;
}

if option_highlighted &gt; option_max
{
    option_highlighted = option_min;
}

if option_highlighted &lt; option_min
{
    option_highlighted = option_max;
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Press Options
if keyboard_check_pressed(global.key_enter) &amp;&amp; !instance_exists(parFade)
{
    aud_play_simple(snd_menu_accept);
    if option_highlighted = 0
    {
        instance_create(0,0,objFadeNext);
        event_user(0);
    }
    
    if option_highlighted = 1
    {
        with instance_create(0,0,objFadeToValue)
        {
            value = rm_options;
        }
        event_user(0);
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Define Arrays
option_off[0] = option_off_0;
option_off[1] = option_off_1;
option_off[2] = option_off_2;
option_off[3] = option_off_3;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Get the Text Outta Here!
TweenFireTo(id, EaseInQuad, 0, false, 0, 20, "option_off_0", -512);
TweenFireTo(id, EaseInQuad, 0, false, 10, 20, "option_off_1", -512);
TweenFireTo(id, EaseInQuad, 0, false, 20, 20, "option_off_2", -512);
TweenFireTo(id, EaseInQuad, 0, false, 30, 20, "option_off_3", -512);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
draw_sprite_ext(spr_ednaldo_images, previous_image, 120, 0, 1.5, 1.5, 0, c_white, 1)
draw_sprite_ext(spr_ednaldo_images, current_image, 120, 0, 1.5, 1.5, 0, c_white, current_alpha)

draw_sprite_ext(sprite_index, 0, 0, 0, 1, 1, 0, c_white, 1)
draw_sprite_ext(sprite_index, 1, shadow_off, 0, 1, 1, 0, c_white, 1)
draw_sprite_ext(sprite_index, 2, 0, 0, 1, 1, 0, c_white, bar_alpha)
draw_sprite_ext(sprite_index, 3, ednaldo_off, 0, 1, 1, 0, c_white, 1)


draw_set_halign(fa_left)
draw_set_font(fnt_century_20)
var i;
 for (i = 0; i &lt; option_max + 1; i += 1)
    {
        if option_highlighted = i
        {
            draw_set_color(c_white);
            draw_rectangle(0 + option_off[i], 99 + (i * 33) + 4, 23 + string_width(option[i]) + 4 + option_off[i], 99 + (i * 33) + 32, false)
            
            draw_set_color(make_color_rgb(37,191,255));
        }
        else
        {
            draw_set_color(c_white);
        }
        
        draw_text(23 + option_off[i], 99 + (i * 33), option[i])
    }
    
    draw_set_font(fnt_normal_8);
    draw_set_halign(fa_left);
    draw_set_color(c_white);
    draw_text(8, 243, string(GAME_NAME) + "#" + string(GAME_VERSION));
    
    draw_sprite(spr_small_sidebar, -1, sidebar_x, 6)
    draw_key(sidebar_x + 9, 2, "UP")
    draw_key(sidebar_x + 32, 2, "DOWN")
    draw_key(sidebar_x + 55, 2, "ENTER")
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
