<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Variables.

    enemy_max_hp    = 4;
    enemy_hp        = enemy_max_hp;        // How many hits it takes to defeat.
    enemy_invframes = 30;       // How long boss is invulnerable.
    enemy_invbackup = enemy_invframes;
    enemy_state     = 'active'; // Boss state. (active, hit, defeated)
    enemy_killer    = self;     //Who Killed this enemy?
    deathsprite    = sprite_index;  //Sprite For When Dead
    harmful        = true;     /* Is this enemy harmful ? */
    active         = false;     /* Is this enemy active ? */
    no_kill        = false;     /* Checks wether the player destroyed the badnik or not.*/
    animation_direction = 1;
    ground = true;
    x_speed = 0;
    y_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* Destroy the Enemy: */
if( no_kill = false )
{
image_xscale = animation_direction;
scr_tear_apart()

scr_shake_cam(15);

/* Create the Sound Effect */
//sound_play(snd_enemy_destroy);

/*Retrieve The Center Of The Sprite*/
var xx;
xx=x-sprite_get_xoffset(sprite_index)+(sprite_get_width(sprite_index)/2)
var yy;
yy=y-sprite_get_yoffset(sprite_index)+(sprite_get_height(sprite_index)/2)

/* Create Explosion */
dummy_effect_create(spr_enemy_explosion,0.2,xx,yy,1,0);

/* Scrap Metals */
scrapmetal_id=instance_create(xx-8,yy,obj_scrap_metal);
scrapmetal_id.direction=115;
scrapmetal_id.speed=3;
scrapmetal_id=instance_create(xx,yy,obj_scrap_metal);
scrapmetal_id.direction=90;
scrapmetal_id.speed=5;
scrapmetal_id=instance_create(xx+8,yy,obj_scrap_metal);
scrapmetal_id.direction=75;
scrapmetal_id.speed=3;

/* Death Star Effects*/
var a;
a = 0;

       repeat(8){
        //Create smoke effect
        with (instance_create(xx, yy, obj_death_star)) {
            motion_set(a, 3);
            a += 45}
        }   

/* Create Score */
score_ = instance_create(xx,yy-10,obj_object_score)
 score_.sfx_score = 1;
 
// Create XP Balls or whatever
 repeat (ceil(enemy_max_hp))
{
    with instance_create(x,y,obj_pellet)
    {
        x_speed = random_range(-8, 8)
        y_speed = random_range(-3, -8);
    }
}
};

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Handle Flashing and State Changing.

  // Flash:
    if(enemy_invframes &gt; 0 &amp;&amp; enemy_state == 'hit')
    {
       enemy_invframes -= 1;
       if((enemy_invframes mod 4) == 1)
       {

//Flash Red
       if image_blend == c_white{
            image_blend = c_red;
            image_alpha = 0.5;
            exit;
          }

//Flash White
       if image_blend == c_red{
            image_blend = c_white;
            image_alpha = 0.8;
            exit;
          }

       }
    }else {
        image_blend = c_white;
        image_alpha = 1;
        }
 
 // State change.
    if(enemy_invframes == 0 &amp;&amp; enemy_state == 'hit')
    {
       enemy_state = 'active';
    }
    
    if (enemy_state == 'defeated'){
    instance_destroy()
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Die!
if enemy_hp&lt;=0{
aud_play_simple(snd_enemy_hit3);
enemy_state = 'defeated';
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="21">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string> if(enemy_state == "active")
                  { 
                     if !(enemy_hp &lt;= 0)
                     {
                        //Play Sounds
                        aud_play_simple(choose(snd_enemy_hit1,snd_enemy_hit2));
                        enemy_state     = 'hit';
                        enemy_invframes = enemy_invbackup;
                     }
                     else
                     {
                        aud_play_simple(snd_enemy_hit3);
                        enemy_state = 'defeated';
                        enemy_killer = other;
                     }
                     
                  }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Self.
draw_sprite_ext(sprite_index, image_index, floor(x), floor(y), animation_direction, image_yscale, image_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
